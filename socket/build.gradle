plugins {
    id 'kotlin-multiplatform'
}
repositories {
    mavenCentral()
    jcenter()
}

apply from: "../gradle/android.gradle"
apply from: "../gradle/experimental.gradle"

kotlin {
    jvm()
    if (System.getenv("ANDROID_HOME")) {
        android()
    }
    js {
        useCommonJs()
        nodejs {
            testTask {

            }
        }
        browser {
            testTask {
                useKarma {
                    useChromeHeadless()
                    if (System.getenv().containsKey("MOZ_HEADLESS") || System.getenv().containsKey("FIREFOX_BIN")) {
                        useFirefox()
                    }
                }
                enabled = !System.getenv().containsKey("IGNORE_BROWSER_TESTS")
            }
        }
    }
//    ios("iOS")
    macosX64("macos")
    linuxX64("linux")
    mingwX64("windows")
    
    sourceSets {
        commonMain {
            dependencies {
                implementation project(':buffer')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        if (System.getenv("ANDROID_HOME")) {
            androidMain {
                dependsOn jvmMain
            }
            androidTest {
                dependsOn jvmTest
            }
        }
        jvmMain {
            dependencies {
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test-junit')
            }
        }
        jsMain {
            dependencies {
                implementation project(':buffer')
            }
        }

        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        browserMain{
            dependsOn jsMain
        }
        browserTest {
            dependencies {

            }
        }
        nodejsMain {
            dependsOn jsMain
        }
        nodejsTest {
            dependencies {
                implementation kotlin('test-js')
                implementation npm('tcp-port-used', '1.0.1')
            }
        }

        posixMain {
            dependsOn commonMain
            dependencies {
            }
        }
        posixTest {
            dependsOn commonTest
            dependencies {
            }
        }

        iOSX64Main {
            dependsOn posixMain
        }
        iOSX64Test {
            dependsOn posixTest
        }
        iOSArm64Main {
            dependsOn posixMain
        }
        iOSArm64Test {
            dependsOn posixTest
        }
        linuxMain {
            dependsOn posixMain
        }
        linuxTest {
            dependsOn posixTest
        }
        macosMain {
            dependsOn posixMain
        }
        macosTest {
            dependsOn posixTest
        }
        windowsMain {
            dependsOn posixMain
        }
        windowsTest {
            dependsOn posixTest
        }
    }
// Enable experimental stdlib API used by the sample.
    sourceSets.all {
        languageSettings.useExperimentalAnnotation("kotlin.ExperimentalStdlibApi")
    }
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += [
                        "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                        "-Xuse-experimental=kotlin.ExperimentalStdlibApi",
                        "-Xopt-in=kotlin.time.ExperimentalTime",
                        "-Xopt-in=kotlin.RequiresOptIn"
                ]
            }
        }
    }
}