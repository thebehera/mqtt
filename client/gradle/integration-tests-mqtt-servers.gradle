class MosquittoServer extends DefaultTask {
    Process process
    Thread childThread
    File configurationDirectory
    String configurationFileName

    MosquittoServer() {
        configurationDirectory = new File(project.projectDir, "${File.separatorChar}gradle${File.separatorChar}configurations")
    }


    @TaskAction
    void startServer() {
        ProcessBuilder pb = new ProcessBuilder()
                .directory(configurationDirectory)
                .command "mosquitto", "-c", configurationFileName, "-v"
        pb.redirectErrorStream(true)
        process = pb.start()
        BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))

        childThread = new Thread(new Runnable() {
            @Override
            void run() {
                try {
                    for (String line = reader.readLine(); line != null; line = reader.readLine()) {
//                        println("[$configurationFileName] $line")
                    }
                } catch (Exception e) {
                } finally {
                    reader.close()
                }
                logger.warn('started mosquitto ' + configurationFileName)
            }
        })
        childThread.start()
    }

    void shutdown() {
//        try {
//            if (process != null && process.alive) {
//                process.destroy()
//                process = null
//            }
//        } catch (Exception e) {
//        } finally {
//            if (process != null && process.alive) {
//                process.destroyForcibly()
//            }
//        }
    }
}

boolean checkMosquitto() {
    ProcessBuilder pb = new ProcessBuilder()
            .command "mosquitto"
    try {
        pb.start().destroy()
        return true
    } catch (Exception e) {
        return false
    }
}

if (checkMosquitto()) {
    task stopMosquittoTLS60001() {
        doLast {
            tasks.startMosquittoTLS60001.shutdown()
        }
    }

    task startMosquittoTLS60001(type: MosquittoServer) {
        configurationFileName = "mosquitto_tls_1.3_60001.conf"
    }

    task stopMosquitto60000Default() {
        doLast {
            tasks.startMosquitto60000Default.shutdown()
        }
    }

    task startMosquitto60000Default(type: MosquittoServer) {
        configurationFileName = "mosquitto_default_60000.conf"
    }
    check {
        dependsOn startMosquittoTLS60001
        dependsOn startMosquitto60000Default
        finalizedBy stopMosquittoTLS60001
        finalizedBy stopMosquitto60000Default
    }
} else {
    logger.warn('Integration tests are disabled for the client! Reason: Failed to find mosquitto installed on the PATH. Please add it to your path.')
    tasks.whenTaskAdded { task ->
        if (task.name.contains("testDebugUnitTest") || task.name.contains("testReleaseUnitTest")) {
            task.enabled = false
        }
    }
}
