plugins {
    id 'kotlin-multiplatform'
}
repositories {
    mavenCentral()
    jcenter()
}
apply from: "../gradle/experimental.gradle"
apply from: "../gradle/android.gradle"

kotlin {
//    jvm()
    if (System.getenv("ANDROID_HOME") && JavaVersion.current().ordinal() == JavaVersion.VERSION_1_8.ordinal()) {
        android()
        jvm()
    } else {
        jvm()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib')
                compileOnly project(":wire4")
                compileOnly project(":wire5")
                api project(":wire-core")
                implementation project(":buffer")
                implementation project(":socket")
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            }
        }
        commonTest {
            dependencies {
                implementation project(":wire4")
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        commonJvm {
            dependencies {
                implementation kotlin('stdlib-jdk7')
                implementation project(":buffer")
                implementation project(":socket")
                implementation project(":wire-core")
                implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$ktx_lifecycle_version"
            }
        }
        commonJvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
            }
        }
        if (System.getenv("ANDROID_HOME") && JavaVersion.current().ordinal() == JavaVersion.VERSION_1_8.ordinal()) {
            androidMain {
                dependsOn commonJvm
                dependencies {
                    implementation project(":android_roomdb_core")
                    implementation "androidx.room:room-runtime:$room_version"
                    implementation "androidx.room:room-ktx:$room_version"
                    implementation "androidx.room:room-common:$room_version"

                }
            }
            androidTest {
                dependsOn commonJvmTest
            }
        }
        jvmMain {
            dependsOn commonJvm
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutines_version"
            }
        }
        jvmTest {
            dependsOn commonJvmTest
        }
    }
    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += [
                        "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                        "-Xuse-experimental=kotlin.ExperimentalStdlibApi"
                ]
            }
        }
    }
}

if (System.getenv("ANDROID_HOME") && JavaVersion.current().ordinal() == JavaVersion.VERSION_1_8.ordinal()) {
    dependencies {
        implementation project(":android_roomdb_core")
        implementation "androidx.room:room-runtime:$room_version"
        implementation "androidx.room:room-ktx:$room_version"
        api "androidx.room:room-common:$room_version"

        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    }
}

apply from: "./gradle/integration-tests-mqtt-servers.gradle"
