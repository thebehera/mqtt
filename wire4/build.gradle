plugins {
    id 'kotlin-multiplatform'
    id 'com.android.library'
}
apply plugin: 'kotlin-android-extensions'
androidExtensions {
    experimental = true
}
apply from: "../gradle/android.gradle"
configurations {
    compileClasspath
}
repositories {
    mavenCentral()
    jcenter()
}
apply from: "../gradle/experimental.gradle"
kotlin {
    jvm()
    android()
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                api project(':wire-core')
                implementation "org.jetbrains.kotlinx:kotlinx-io:$kotlinx_io_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk7')
                implementation "org.jetbrains.kotlinx:kotlinx-io-jvm:$kotlinx_io_version"
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
        androidMain {
            dependencies {
                implementation "androidx.room:room-common:$room_version"
                implementation project(':wire-core')
                implementation kotlin('stdlib-jdk7')
                implementation "org.jetbrains.kotlinx:kotlinx-io-jvm:$kotlinx_io_version"
            }
        }
        androidTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
    }

    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += [
                        "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes"
                ]
            }
        }
    }
}
configurations {
    compileClasspath
}
dependencies {
    implementation project(':wire-core')
}
tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        //this is for speed up build
        task.enabled = false
    }
    if(task.name.contains("Test"))
    {
        //this is what you need
        task.enabled = false
    }
}