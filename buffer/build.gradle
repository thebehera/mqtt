import org.apache.tools.ant.taskdefs.condition.Os
plugins {
    id 'kotlin-multiplatform'
}
repositories {
    mavenCentral()
    jcenter()
}

apply from: "../gradle/android.gradle"
apply from: "../gradle/experimental.gradle"
kotlin {
    jvm()
    if (System.getenv("ANDROID_HOME") && JavaVersion.current().ordinal() == JavaVersion.VERSION_1_8.ordinal()) {
        android()
    }
    ios("iOS")
    js {
        browser {
            testTask {
                useKarma {
                    if (System.getenv().containsKey("CHROME_INSTALLED")) {
                        useChromeHeadless()
                    }
                    if (System.getenv().containsKey("MOZ_HEADLESS") || System.getenv().containsKey("FIREFOX_BIN")) {
                        useFirefox()
                    }
                }
                enabled = (System.getenv().containsKey("MOZ_HEADLESS") || System.getenv().containsKey("FIREFOX_BIN") || System.getenv().containsKey("CHROME_INSTALLED"))
            }
        }
        nodejs {
            testTask {

            }
        }
    }
    macosX64("macos")
    linuxX64("linux")
    mingwX64("windows")
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$coroutines_version"
            }
        }
        if (System.getenv("ANDROID_HOME") && JavaVersion.current().ordinal() == JavaVersion.VERSION_1_8.ordinal()) {
            androidMain {
                dependsOn jvmMain
            }
            androidTest {
                dependsOn jvmTest
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk7')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            }
        }
        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$coroutines_version"
            }
        }
        nativeMain {
            dependsOn commonMain
            dependencies {
                implementation "io.ktor:ktor-io-native:$ktor_version"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version"
            }
        }
        nativeTest {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:$coroutines_version"
            }
        }
        iOSX64Main {
            dependsOn nativeMain
        }
        iOSX64Test {
            dependsOn nativeTest
        }
        iOSArm64Main {
            dependsOn nativeMain
        }
        iOSArm64Test {
            dependsOn nativeTest
        }
        linuxMain {
            dependsOn nativeMain
        }
        linuxTest {
            dependsOn nativeTest
        }
        macosMain {
            dependsOn nativeMain
        }
        macosTest {
            dependsOn nativeTest
        }
        windowsMain {
            dependsOn nativeMain
        }
        windowsTest {
            dependsOn nativeTest
        }
    }

    targets.all {
        compilations.all {
            kotlinOptions {
                freeCompilerArgs += [
                        "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                        "-Xuse-experimental=kotlin.ExperimentalStdlibApi",
                        "-Xopt-in=kotlin.RequiresOptIn"
                ]
            }
        }
    }
}